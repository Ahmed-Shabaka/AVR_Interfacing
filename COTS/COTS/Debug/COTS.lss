
COTS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001ba  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  000001ba  0000022e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000234  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000264  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  000002a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ae7  00000000  00000000  00000328  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000737  00000000  00000000  00000e0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003ab  00000000  00000000  00001546  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000008c  00000000  00000000  000018f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000058c  00000000  00000000  00001980  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000024d  00000000  00000000  00001f0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00002159  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea eb       	ldi	r30, 0xBA	; 186
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 36       	cpi	r26, 0x66	; 102
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
int main(void)
{
	
	
	
	PORT_Init();
  82:	0e 94 58 00 	call	0xb0	; 0xb0 <PORT_Init>
	//SET_BIT(DIO_PORTC->DDR , LED_1 );
    while (1)
	{
		LED_on(LED_0);
  86:	80 e0       	ldi	r24, 0x00	; 0
  88:	0e 94 4d 00 	call	0x9a	; 0x9a <LED_on>
		LED_on(LED_1);
  8c:	81 e0       	ldi	r24, 0x01	; 1
  8e:	0e 94 4d 00 	call	0x9a	; 0x9a <LED_on>
		LED_on(LED_2);
  92:	82 e0       	ldi	r24, 0x02	; 2
  94:	0e 94 4d 00 	call	0x9a	; 0x9a <LED_on>
  98:	f6 cf       	rjmp	.-20     	; 0x86 <main+0x4>

0000009a <LED_on>:
* \Return value:   : Std_ReturnType  E_OK
*                                    E_NOT_OK
*******************************************************************************/
void LED_on(uint8 led_num)
{
	SET_BIT(DIO_PORTC->PORT , led_num);
  9a:	95 b3       	in	r25, 0x15	; 21
  9c:	21 e0       	ldi	r18, 0x01	; 1
  9e:	30 e0       	ldi	r19, 0x00	; 0
  a0:	02 c0       	rjmp	.+4      	; 0xa6 <LED_on+0xc>
  a2:	22 0f       	add	r18, r18
  a4:	33 1f       	adc	r19, r19
  a6:	8a 95       	dec	r24
  a8:	e2 f7       	brpl	.-8      	; 0xa2 <LED_on+0x8>
  aa:	29 2b       	or	r18, r25
  ac:	25 bb       	out	0x15, r18	; 21
  ae:	08 95       	ret

000000b0 <PORT_Init>:

/**********************************************************************************************************************
 *  GLOBAL FUNCTIONS
 *********************************************************************************************************************/
void PORT_Init(void)
{
  b0:	e0 e6       	ldi	r30, 0x60	; 96
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	46 e6       	ldi	r20, 0x66	; 102
  b6:	50 e0       	ldi	r21, 0x00	; 0
		{
			case PORT_A :
			CLEAR_BIT(DIO_PORTA->DDR , Pin );
			break;
			case PORT_B :
			CLEAR_BIT(DIO_PORTB->DDR , Pin );
  b8:	61 e0       	ldi	r22, 0x01	; 1
  ba:	70 e0       	ldi	r23, 0x00	; 0
{
	uint8 counter=0, Port=0 , Pin=0, Dir=0;
	
	for(counter=0;counter<DEFINED_PINS;counter++)
	{
		Port = PORT_Init_Pins[counter].pin_order / NUMBER_PORT_PINS ;
  bc:	80 81       	ld	r24, Z
  be:	98 2f       	mov	r25, r24
  c0:	96 95       	lsr	r25
  c2:	96 95       	lsr	r25
  c4:	96 95       	lsr	r25
		Pin = PORT_Init_Pins[counter].pin_order % NUMBER_PORT_PINS ;
  c6:	87 70       	andi	r24, 0x07	; 7
		Dir = PORT_Init_Pins[counter].pin_dir ;
	
	
	switch(Dir)
  c8:	21 81       	ldd	r18, Z+1	; 0x01
  ca:	22 23       	and	r18, r18
  cc:	b9 f1       	breq	.+110    	; 0x13c <PORT_Init+0x8c>
  ce:	21 30       	cpi	r18, 0x01	; 1
  d0:	09 f0       	breq	.+2      	; 0xd4 <PORT_Init+0x24>
  d2:	6b c0       	rjmp	.+214    	; 0x1aa <PORT_Init+0xfa>
	{
		case OUTPUT :
		switch(Port)
  d4:	91 30       	cpi	r25, 0x01	; 1
  d6:	89 f0       	breq	.+34     	; 0xfa <PORT_Init+0x4a>
  d8:	28 f0       	brcs	.+10     	; 0xe4 <PORT_Init+0x34>
  da:	92 30       	cpi	r25, 0x02	; 2
  dc:	c9 f0       	breq	.+50     	; 0x110 <PORT_Init+0x60>
  de:	93 30       	cpi	r25, 0x03	; 3
  e0:	11 f1       	breq	.+68     	; 0x126 <PORT_Init+0x76>
  e2:	63 c0       	rjmp	.+198    	; 0x1aa <PORT_Init+0xfa>
		{
			case PORT_A :
			SET_BIT(DIO_PORTA->DDR , Pin );
  e4:	2a b3       	in	r18, 0x1a	; 26
  e6:	db 01       	movw	r26, r22
  e8:	02 c0       	rjmp	.+4      	; 0xee <PORT_Init+0x3e>
  ea:	aa 0f       	add	r26, r26
  ec:	bb 1f       	adc	r27, r27
  ee:	8a 95       	dec	r24
  f0:	e2 f7       	brpl	.-8      	; 0xea <PORT_Init+0x3a>
  f2:	cd 01       	movw	r24, r26
  f4:	82 2b       	or	r24, r18
  f6:	8a bb       	out	0x1a, r24	; 26
			break;
  f8:	58 c0       	rjmp	.+176    	; 0x1aa <PORT_Init+0xfa>
			case PORT_B :
			SET_BIT(DIO_PORTB->DDR , Pin );
  fa:	27 b3       	in	r18, 0x17	; 23
  fc:	db 01       	movw	r26, r22
  fe:	02 c0       	rjmp	.+4      	; 0x104 <PORT_Init+0x54>
 100:	aa 0f       	add	r26, r26
 102:	bb 1f       	adc	r27, r27
 104:	8a 95       	dec	r24
 106:	e2 f7       	brpl	.-8      	; 0x100 <PORT_Init+0x50>
 108:	cd 01       	movw	r24, r26
 10a:	82 2b       	or	r24, r18
 10c:	87 bb       	out	0x17, r24	; 23
			break;
 10e:	4d c0       	rjmp	.+154    	; 0x1aa <PORT_Init+0xfa>
			case PORT_C :
			SET_BIT(DIO_PORTC->DDR , Pin );
 110:	24 b3       	in	r18, 0x14	; 20
 112:	db 01       	movw	r26, r22
 114:	02 c0       	rjmp	.+4      	; 0x11a <PORT_Init+0x6a>
 116:	aa 0f       	add	r26, r26
 118:	bb 1f       	adc	r27, r27
 11a:	8a 95       	dec	r24
 11c:	e2 f7       	brpl	.-8      	; 0x116 <PORT_Init+0x66>
 11e:	cd 01       	movw	r24, r26
 120:	82 2b       	or	r24, r18
 122:	84 bb       	out	0x14, r24	; 20
			break;
 124:	42 c0       	rjmp	.+132    	; 0x1aa <PORT_Init+0xfa>
			case PORT_D :
			SET_BIT(DIO_PORTD->DDR , Pin );
 126:	21 b3       	in	r18, 0x11	; 17
 128:	db 01       	movw	r26, r22
 12a:	02 c0       	rjmp	.+4      	; 0x130 <PORT_Init+0x80>
 12c:	aa 0f       	add	r26, r26
 12e:	bb 1f       	adc	r27, r27
 130:	8a 95       	dec	r24
 132:	e2 f7       	brpl	.-8      	; 0x12c <PORT_Init+0x7c>
 134:	cd 01       	movw	r24, r26
 136:	82 2b       	or	r24, r18
 138:	81 bb       	out	0x11, r24	; 17
			break;
 13a:	37 c0       	rjmp	.+110    	; 0x1aa <PORT_Init+0xfa>
		}
		break;
		case INPUT :
		switch(Port)
 13c:	91 30       	cpi	r25, 0x01	; 1
 13e:	91 f0       	breq	.+36     	; 0x164 <PORT_Init+0xb4>
 140:	28 f0       	brcs	.+10     	; 0x14c <PORT_Init+0x9c>
 142:	92 30       	cpi	r25, 0x02	; 2
 144:	d9 f0       	breq	.+54     	; 0x17c <PORT_Init+0xcc>
 146:	93 30       	cpi	r25, 0x03	; 3
 148:	29 f1       	breq	.+74     	; 0x194 <PORT_Init+0xe4>
 14a:	2f c0       	rjmp	.+94     	; 0x1aa <PORT_Init+0xfa>
		{
			case PORT_A :
			CLEAR_BIT(DIO_PORTA->DDR , Pin );
 14c:	9a b3       	in	r25, 0x1a	; 26
 14e:	9b 01       	movw	r18, r22
 150:	02 c0       	rjmp	.+4      	; 0x156 <PORT_Init+0xa6>
 152:	22 0f       	add	r18, r18
 154:	33 1f       	adc	r19, r19
 156:	8a 95       	dec	r24
 158:	e2 f7       	brpl	.-8      	; 0x152 <PORT_Init+0xa2>
 15a:	82 2f       	mov	r24, r18
 15c:	80 95       	com	r24
 15e:	89 23       	and	r24, r25
 160:	8a bb       	out	0x1a, r24	; 26
			break;
 162:	23 c0       	rjmp	.+70     	; 0x1aa <PORT_Init+0xfa>
			case PORT_B :
			CLEAR_BIT(DIO_PORTB->DDR , Pin );
 164:	97 b3       	in	r25, 0x17	; 23
 166:	9b 01       	movw	r18, r22
 168:	02 c0       	rjmp	.+4      	; 0x16e <PORT_Init+0xbe>
 16a:	22 0f       	add	r18, r18
 16c:	33 1f       	adc	r19, r19
 16e:	8a 95       	dec	r24
 170:	e2 f7       	brpl	.-8      	; 0x16a <PORT_Init+0xba>
 172:	82 2f       	mov	r24, r18
 174:	80 95       	com	r24
 176:	89 23       	and	r24, r25
 178:	87 bb       	out	0x17, r24	; 23
			break;
 17a:	17 c0       	rjmp	.+46     	; 0x1aa <PORT_Init+0xfa>
			case PORT_C :
			CLEAR_BIT(DIO_PORTC->DDR , Pin );
 17c:	94 b3       	in	r25, 0x14	; 20
 17e:	9b 01       	movw	r18, r22
 180:	02 c0       	rjmp	.+4      	; 0x186 <PORT_Init+0xd6>
 182:	22 0f       	add	r18, r18
 184:	33 1f       	adc	r19, r19
 186:	8a 95       	dec	r24
 188:	e2 f7       	brpl	.-8      	; 0x182 <PORT_Init+0xd2>
 18a:	82 2f       	mov	r24, r18
 18c:	80 95       	com	r24
 18e:	89 23       	and	r24, r25
 190:	84 bb       	out	0x14, r24	; 20
			break;
 192:	0b c0       	rjmp	.+22     	; 0x1aa <PORT_Init+0xfa>
			case PORT_D :
			CLEAR_BIT(DIO_PORTD->DDR , Pin );
 194:	91 b3       	in	r25, 0x11	; 17
 196:	9b 01       	movw	r18, r22
 198:	02 c0       	rjmp	.+4      	; 0x19e <PORT_Init+0xee>
 19a:	22 0f       	add	r18, r18
 19c:	33 1f       	adc	r19, r19
 19e:	8a 95       	dec	r24
 1a0:	e2 f7       	brpl	.-8      	; 0x19a <PORT_Init+0xea>
 1a2:	82 2f       	mov	r24, r18
 1a4:	80 95       	com	r24
 1a6:	89 23       	and	r24, r25
 1a8:	81 bb       	out	0x11, r24	; 17
 1aa:	32 96       	adiw	r30, 0x02	; 2
 *********************************************************************************************************************/
void PORT_Init(void)
{
	uint8 counter=0, Port=0 , Pin=0, Dir=0;
	
	for(counter=0;counter<DEFINED_PINS;counter++)
 1ac:	e4 17       	cp	r30, r20
 1ae:	f5 07       	cpc	r31, r21
 1b0:	09 f0       	breq	.+2      	; 0x1b4 <PORT_Init+0x104>
 1b2:	84 cf       	rjmp	.-248    	; 0xbc <PORT_Init+0xc>
		break;
		default:
		break;
	}
	}
}
 1b4:	08 95       	ret

000001b6 <_exit>:
 1b6:	f8 94       	cli

000001b8 <__stop_program>:
 1b8:	ff cf       	rjmp	.-2      	; 0x1b8 <__stop_program>
